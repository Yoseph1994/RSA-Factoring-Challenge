#!/usr/bin/env bash
import math
import random

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    g = 1
    while g == 1:
        x = (x * x + c) % n
        y = (y * y + c) % n
        y = (y * y + c) % n
        g = gcd(abs(x - y), n)
    return g

def factorize(n):
    # Trial division
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return i, n // i
    
    # Pollard's rho algorithm
    factor = pollards_rho(n)
    return factor, n // factor

# Example usage
n = 157 # Example RSA number
p, q = factorize(n)
print(f"p: {p}, q: {q}")

